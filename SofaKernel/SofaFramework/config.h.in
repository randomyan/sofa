/******************************************************************************
*       SOFA, Simulation Open-Framework Architecture, development version     *
*                (c) 2006-2017 INRIA, USTL, UJF, CNRS, MGH                    *
*                                                                             *
* This program is free software; you can redistribute it and/or modify it     *
* under the terms of the GNU Lesser General Public License as published by    *
* the Free Software Foundation; either version 2.1 of the License, or (at     *
* your option) any later version.                                             *
*                                                                             *
* This program is distributed in the hope that it will be useful, but WITHOUT *
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       *
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License *
* for more details.                                                           *
*                                                                             *
* You should have received a copy of the GNU Lesser General Public License    *
* along with this program. If not, see <http://www.gnu.org/licenses/>.        *
*******************************************************************************
* Authors: The SOFA Team and external contributors (see Authors.txt)          *
*                                                                             *
* Contact information: contact@sofa-framework.org                             *
******************************************************************************/
#ifndef SOFA_CONFIG_H
#define SOFA_CONFIG_H

// fixes CGAL plugin build errors (default value: 5)
#define BOOST_PARAMETER_MAX_ARITY 12

#cmakedefine SOFA_HAVE_ZLIB

#cmakedefine SOFA_HAVE_GLEW

#cmakedefine SOFA_HAVE_GLUT

#cmakedefine SOFA_HAVE_BOOST

#cmakedefine SOFA_HAVE_BOOST_THREAD

#cmakedefine SOFA_HAVE_BOOST_SYSTEM

#cmakedefine SOFA_HAVE_BOOST_DATE_TIME

#cmakedefine SOFA_HAVE_BOOST_LOCALE

#cmakedefine SOFA_HAVE_BOOST_FILESYSTEM

#cmakedefine SOFA_HAVE_TINYXML

#cmakedefine SOFA_DUMP_VISITOR_INFO

#cmakedefine SOFA_NO_OPENGL

#cmakedefine SOFA_NO_UPDATE_BBOX

#cmakedefine DETECTIONOUTPUT_FREEMOTION

#cmakedefine DETECTIONOUTPUT_BARYCENTRICINFO

#cmakedefine SOFA_FLOAT

#cmakedefine SOFA_DOUBLE

#cmakedefine SOFA_WITH_FLOAT

#cmakedefine SOFA_WITH_DOUBLE

#cmakedefine SOFA_USE_MASK

#cmakedefine SOFA_WITH_DEVTOOLS

/// This can be either true or false
#define SOFA_WITH_THREADING ${SOFA_WITH_THREADING_}

#define SOFA_WITH_EXPERIMENTAL_FEATURES ${SOFA_WITH_EXPERIMENTAL_FEATURES_}

#ifdef _MSC_VER
#define EIGEN_DONT_ALIGN
#endif // _MSC_VER

#ifdef WIN32
#define UNICODE
#define _USE_MATH_DEFINES // just to access M_PI with cmath
#endif // WIN32

#ifdef SOFA_FLOAT
typedef float SReal;
#else
typedef double SReal;
#endif

// The SOFA_EXTERN_TEMPLATE macro controls the use of extern templates in Sofa.
// That is, every extern template declaration in Sofa is inside a block
// protected by
//
//   #if defined(SOFA_EXTERN_TEMPLATE)
//
// Not only are extern template declarations necessary for DLLs on windows, but
// they can also fix some RTTI issues on OS X (typeid, dynamic_cast), and they
// hugely speed up the build process on every platform, so they are enabled by
// default. (Even though they were not part of C++ until C++11, they are
// supported by all majors compilers.)
#ifndef SOFA_NO_EXTERN_TEMPLATE
#  define SOFA_EXTERN_TEMPLATE
#endif

#ifndef WIN32
#	define SOFA_EXPORT_DYNAMIC_LIBRARY
#   define SOFA_IMPORT_DYNAMIC_LIBRARY
#else
#	define SOFA_EXPORT_DYNAMIC_LIBRARY __declspec( dllexport )
#   define SOFA_IMPORT_DYNAMIC_LIBRARY __declspec( dllimport )
#   ifdef _MSC_VER
#       pragma warning(disable : 4231)
#       pragma warning(disable : 4910)
#   endif
#endif

#ifdef SOFA_BUILD_HELPER
#   define SOFA_TARGET SofaHelper
#	define SOFA_HELPER_API SOFA_EXPORT_DYNAMIC_LIBRARY
#else
#	define SOFA_HELPER_API SOFA_IMPORT_DYNAMIC_LIBRARY
#endif

#ifdef SOFA_BUILD_DEFAULTTYPE
#   define SOFA_TARGET SofaDefaulttype
#	define SOFA_DEFAULTTYPE_API SOFA_EXPORT_DYNAMIC_LIBRARY
#else
#	define SOFA_DEFAULTTYPE_API SOFA_IMPORT_DYNAMIC_LIBRARY
#endif

#ifdef SOFA_BUILD_CORE
#   define SOFA_TARGET   SofaCore
#	define SOFA_CORE_API SOFA_EXPORT_DYNAMIC_LIBRARY
#else
#	define SOFA_CORE_API SOFA_IMPORT_DYNAMIC_LIBRARY
#endif

#ifdef SOFA_BUILD_SIMULATION_CORE
#   define SOFA_TARGET SofaSimulationCore
#	define SOFA_SIMULATION_CORE_API SOFA_EXPORT_DYNAMIC_LIBRARY
#else
#	define SOFA_SIMULATION_CORE_API SOFA_IMPORT_DYNAMIC_LIBRARY
#endif

#endif
